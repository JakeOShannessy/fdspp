on:
  push:
    tags:
      - "v*"

name: Release

jobs:
  build-rpm:
    name: Build RPM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          # - "fedora:36"
          # - "rockylinux:9"
          - "rockylinux:8"
    container: ${{ matrix.container }}
    steps:
      - name: Install git
        run: yum install -y git
      - uses: actions/checkout@v3
      - name: install prerequisites
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup.sh
          sh rustup.sh -y
          yum install -y git gcc
          yum install -y rpmdevtools systemd systemd-rpm-macros
      - name: Create archive
        run: |
          spec_path=fdspp.spec
          version=$(rpmspec  -q --qf '%{VERSION}' ${spec_path})
          mkdir -p rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
          cp ${spec_path} rpmbuild/SPECS/
          git config --global --add safe.directory /__w/fdspp/fdspp
          git archive --output=rpmbuild/SOURCES/${src_name}-${version}.tar.gz --prefix=${src_name}-${version}/ HEAD
        env:
          src_name: fdspp
      - name: Build package
        run: |
          source $HOME/.cargo/env
          spectool -g rpmbuild/SPECS/fdspp.spec -C rpmbuild/SOURCES --all
          rpmbuild -ba rpmbuild/SPECS/fdspp.spec --define "_topdir $(pwd)/rpmbuild"
        env:
          QA_RPATHS: 7
      - name: Copy files
        run: |
          spec_path=fdspp.spec
          version=$(rpmspec  -q --qf '%{VERSION}' ${spec_path})
          release=$(rpmspec  -q --qf '%{RELEASE}' ${spec_path})
          arch=$(rpmspec  -q --qf '%{ARCH}' ${spec_path})
          ls rpmbuild/RPMS/${arch}
          mkdir -p dist
          cp rpmbuild/RPMS/${arch}/fdspp-${version}-${release}.${arch}.rpm dist
      - uses: actions/upload-artifact@v3
        with:
          name: fdspp-rpm
          path: |
            dist/*.rpm

  build-wix:
    name: Build MSI
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true
      - name: Build
        run: cargo build --all --release
      - name: Build Installer
        shell: bash
        env:
          WIX_PATH_CANDLE: "C:/Program Files (x86)/WiX Toolset v3.11/bin/candle.exe"
          WIX_PATH_LIGHT: "C:/Program Files (x86)/WiX Toolset v3.11/bin/light.exe"
        run: |
          mkdir wixout
          ls
          "$WIX_PATH_CANDLE" FdsPpInstaller.wxs -o wixout/
          "$WIX_PATH_LIGHT" wixout/*.wixobj -o FdsPpInstaller.msi
          mkdir dist
          cp FdsPpInstaller.msi dist
      - uses: actions/upload-artifact@v3
        with:
          name: fdspp-msi
          path: |
            dist/*.msi

